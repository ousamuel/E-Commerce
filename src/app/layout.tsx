"use client";
import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import {
  Image,
  Link,
  Tooltip,
  Accordion,
  AccordionItem,
} from "@nextui-org/react";
import { SidebarLinks, Sublink, SidebarLink } from "./staticData";
import React, { useContext, useState, useEffect } from "react";
import awsExports from "../../e-commerce/aws-exports";
Amplify.configure(awsExports);

import { Amplify} from "aws-amplify";

const inter = Inter({ subsets: ["latin"] });
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [navOpen, setNavOpen] = useState<string>("hidden");
  let toggleNav: (str: string) => void = function (str: string): void {
    if (str != "open") {
      setNavOpen("open");
    } else {
      setNavOpen("close");
    }
  };
  useEffect(() => {
    const body = document.querySelector(".main-body") as HTMLElement | null;
    if (body && body.style) {
      if (navOpen == "open") {
        body.style.overflow = "hidden";
      } else {
        body.style.overflow = "scroll";
      }
    }
  }, [navOpen]);

  return (
    <html lang="en">
      <body className={inter.className}>
        {/* target="_blank"
        rel="noopener noreferrer"
        href="" */}
        <img
          src="/svgs/telegram.svg"
          className="fixed right-[15px] bottom-[15px]"
          width={45}
        />
        <nav
          id="slider"
          className={
            navOpen == "hidden"
              ? "hidden"
              : navOpen == "open"
              ? "slide-in navbar z-500"
              : "slide-out navbar z-500"
          }
        >
          <main className="navbar-main flex flex-col bg-white px-2 py-4">
            <header className="flex justify-center p-2">
              <Image src="imgs/logo.png" width={150} alt="logo" />
            </header>
            <div>search?</div>
            <div>1231231</div>
            <div>1231231</div>
            <ul className="flex flex-col">
              {SidebarLinks.map((link: SidebarLink, index) =>
                link.sublinks.length > 0 ? (
                  <Accordion isCompact key={index}>
                    <AccordionItem
                      className="hover:bg-gray-300 py-[5px]"
                      aria-label={link.title}
                      title={link.title}
                    >
                      <ul className="flex flex-col">
                        {link.sublinks.map((sublink: Sublink) => (
                          <Link
                            key={sublink.title + index}
                            href={sublink.route}
                            className="pl-10 hover:bg-gray-200"
                          >
                            {sublink.title}
                          </Link>
                        ))}
                      </ul>
                    </AccordionItem>
                  </Accordion>
                ) : (
                  <Link
                    key={index}
                    href={link.route}
                    className="header-link hover:bg-gray-300"
                  >
                    <li className="">{link.title}</li>
                  </Link>
                )
              )}
            </ul>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
            <div>123123123</div>
          </main>
          <div
            onClick={() => toggleNav(navOpen)}
            className="flex grow bg-gray-500 opacity-70"
          ></div>
        </nav>
        <Image
          className="navbar-trigger fixed m-1 p-1 cursor-pointer hover:bg-red-400 rounded-lg z-1000 bg-white"
          src="svgs/rows.svg"
          width={35}
          onClick={() => toggleNav(navOpen)}
          alt="sidebar"
        />
        {children}
      </body>
    </html>
  );
}
